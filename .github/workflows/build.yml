name: Build
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt
      - name: Run cargo fmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check

  test:
    strategy:
      fail-fast: true
      matrix:
        platform: [windows-latest, ubuntu-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - name: Install libdbus-1-dev
        if: ${{ matrix.platform == 'ubuntu-latest' }}
        run: sudo apt-get install -y libdbus-1-dev
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{matrix.platform }}
      - name: Run cargo test
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace

  version:
    runs-on: ubuntu-latest
    outputs:
      VERSION: ${{ steps.getCirrusVersion.outputs.VERSION }}
      BUILD_STRING: ${{ steps.getCirrusVersion.outputs.BUILD_STRING }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: build-scripts
      - name: Build build-scripts
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --package build-scripts
      - name: Get cirrus version
        id: getCirrusVersion
        run: |
          cargo run --package build-scripts --bin get-version > version
          cat version
          cat version >> "$GITHUB_OUTPUT"

  package:
    runs-on: ubuntu-22.04
    needs: [ version ]
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
          - x86_64-pc-windows-gnu
        include:
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-pc-windows-gnu
            pkg: gcc-mingw-w64-x86-64
          - target: armv7-unknown-linux-gnueabihf
            pkg: gcc-arm-linux-gnueabihf
            linker: arm-linux-gnueabihf-gcc
          - target: aarch64-unknown-linux-gnu
            pkg: gcc-aarch64-linux-gnu
            linker: aarch64-linux-gnu-gcc
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          profile: minimal
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.19'
          cache: true
          cache-dependency-path: restic/go.sum
      - name: Install meson
        run: sudo apt-get install -y meson
      - name: Install cross-compiling toolchain
        if: ${{ matrix.pkg }}
        run: sudo apt-get install -y ${{ matrix.pkg }}
      - name: Set up Rust linker
        if: ${{ matrix.linker }}
        run: |
          mkdir -p "$HOME/.cargo"
          cat > "$HOME/.cargo/config" <<EOF
          [target.${{ matrix.target }}]
          linker = "${{ matrix.linker }}"
          EOF
      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{matrix.target }}
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: >
            --package build-scripts
            --bin package --
            --version ${{ needs.version.outputs.VERSION }}
            --build-string ${{ needs.version.outputs.BUILD_STRING }}
            --target ${{ matrix.target }}
            --features bundled-restic-support
            --static-dbus
            --build-restic
      - uses: actions/upload-artifact@v3
        with:
          name: cirrus_${{ matrix.target }}
          path: public/*

  container-image:
    runs-on: ubuntu-latest
    needs:
      - version
      - package
    strategy:
      fail-fast: true
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - armv7-unknown-linux-gnueabihf
          - aarch64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v3
      - uses: actions/download-artifact@v3
        with:
          name: cirrus_${{ matrix.target }}
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
      - uses: Swatinem/rust-cache@v2
        with:
          shared-key: build-scripts
      - uses: docker/setup-qemu-action@v2
      - uses: actions-rs/cargo@v1
        with:
          command: run
          args: >
            --package build-scripts
            --bin container-image --
            cirrus_${{ matrix.target }}.tar.xz
            --target ${{ matrix.target }}
