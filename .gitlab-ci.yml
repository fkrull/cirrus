image: registry.gitlab.com/fkrull/cirrus/ci-tools:latest

variables:
  STORAGE_DRIVER: vfs
  BUILDAH_ISOLATION: chroot
  CARGO_HOME: ${CI_PROJECT_DIR}/cargo
  SCCACHE_DIR: ${CI_PROJECT_DIR}/sccache
  RUSTC_WRAPPER: sccache

cache:
  paths:
    - cargo/
    - sccache/

include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

stages:
  - tools
  - test
  - package
  - publish


# ----
tools:ci-tools-image:
  stage: tools
  image: fedora:33
  when: manual
  before_script:
    - dnf install -y buildah
  script:
    - buildah build-using-dockerfile
      -f .ci/tools.Containerfile
      --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      -t docker://registry.gitlab.com/fkrull/cirrus/ci-tools:latest
      .ci

test:
  stage: test
  script:
    - cargo fmt -- --check
    - sccache --start-server
    - cargo clippy --workspace --all-features
    - cargo test --workspace --all-features
    - sccache --show-stats

# package steps
server:linux:x86_64:
  extends: .server
  stage: package
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: manual
  variables:
    TARGET: x86_64-unknown-linux-musl
    RESTIC_URL: https://github.com/restic/restic/releases/download/v0.11.0/restic_0.11.0_linux_amd64.bz2
    RESTIC_SHA256: f559e774c91f1201ffddba74d5758dec8342ad2b50a3bcd735ccb0c88839045c
    BASE_IMAGE: amd64/alpine:3.12
    TAG: ${CI_COMMIT_REF_NAME}-linux-amd64

server:linux:armv7:
  extends: .server
  stage: package
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: manual
  variables:
    TARGET: armv7-unknown-linux-musleabihf
    RESTIC_URL: https://github.com/restic/restic/releases/download/v0.11.0/restic_0.11.0_linux_arm.bz2
    RESTIC_SHA256: bcefbd70874b8198be4635b5c64b15359a7c28287d274e02d5177c4933ad3f71
    BASE_IMAGE: arm32v7/alpine:3.12
    QEMU_BINARY: /usr/bin/qemu-arm-static
    TAG: ${CI_COMMIT_REF_NAME}-linux-arm32v7

server:manifest-list:
  stage: package
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: manual
  script:
    - buildah manifest create cirrus-manifest-list
      docker://registry.gitlab.com/fkrull/cirrus/server:${CI_COMMIT_REF_NAME}-linux-amd64
      docker://registry.gitlab.com/fkrull/cirrus/server:${CI_COMMIT_REF_NAME}-linux-arm32v7
    - buildah manifest push
      --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      cirrus-manifest-list
      docker://registry.gitlab.com/fkrull/cirrus/server:${CI_COMMIT_REF_NAME}

appx:x86_64:
  extends: .appx
  stage: package
  rules:
    - if: $CI_COMMIT_TAG
      when: always
    - when: manual
  variables:
    TARGET: x86_64-pc-windows-msvc
    RESTIC_URL: https://github.com/restic/restic/releases/download/v0.11.0/restic_0.11.0_windows_amd64.zip
    RESTIC_SHA256: 4d9ec99ceec71df88f47c5ebae5fdd15474f7d36e9685a655830c2fc89ad9153
    APPX_VERSION: ${CI_COMMIT_REF_NAME}

# publish
publish:server:
  stage: publish
  rules:
    - if: $CI_COMMIT_TAG
      when: always
  script:
    - skopeo copy
      --dest-creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      docker://registry.gitlab.com/fkrull/cirrus/server:${CI_COMMIT_REF_NAME}
      docker://registry.gitlab.com/fkrull/cirrus/server:latest


# ----
# build Linux container image
.server:
  before_script:
    - rustup target add ${TARGET}
  script:
    - sccache --start-server
    - cargo run -p package --bin server --
      --target ${TARGET}
      --restic-url ${RESTIC_URL}
      --restic-sha256 ${RESTIC_SHA256}
      --base-image ${BASE_IMAGE}
      --qemu-binary "${QEMU_BINARY}"
    - sccache --show-stats
    - buildah push
      --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      cirrus-server-image
      docker://registry.gitlab.com/fkrull/cirrus/server:${TAG}

# build Windows appx package
.appx:
  tags:
    - shared-windows
    - windows
    - windows-1809
  before_script:
    - choco install -y sccache
    - Invoke-WebRequest https://win.rustup.rs/x86_64 -OutFile rustup-init.exe
    - $env:CARGO_HOME = "$env:USERPROFILE/.cargo"
    - ./rustup-init.exe -y --default-host="$TARGET" --default-toolchain=stable --profile=minimal
    - $env:CARGO_HOME = "${CI_PROJECT_DIR}/cargo"
    - $env:PATH += ";$env:USERPROFILE/.cargo/bin"

    - $sdkPath = (Get-ItemProperty "HKLM:\Software\Microsoft\Windows Kits\Installed Roots").KitsRoot10
    - $latest = Get-ChildItem "$sdkPath\bin"
      | Foreach-Object {$_.Name}
      | Select-String "10.0"
      | Sort-Object
      | Select-Object -Last 1
    - $env:PATH += ";$sdkPath\bin\$latest\x64"
  script:
    - $thumbprint = package\import-base64-certificate.ps1 Cert:\LocalMachine\My
    - sccache --start-server
    - cargo run -p package --bin appx --
      --target ${TARGET}
      --restic-url ${RESTIC_URL}
      --restic-sha256 ${RESTIC_SHA256}
      --version ${APPX_VERSION}
      --cert-thumbprint $thumbprint
      --use-system-cert-store
    - sccache --show-stats
  artifacts:
    paths:
      - target/Cirrus.appx
    expire_in: 1 day
