variables:
  # TODO: replace
  CONTAINER_IMAGE: docker://registry.gitlab.com/fkrull/cirrus/server:${CI_COMMIT_REF_NAME}

stages:
  - build
  - package
  - container-manifest-list

test:
  extends: .sccache
  stage: build
  script:
    - rustup component add clippy rustfmt
    - cargo fmt -- --check
    - cargo clippy --workspace
    - cargo test --workspace --all-features

release:x86_64:
  extends: .release
  stage: build
  variables:
    TARGET: x86_64-unknown-linux-musl

release:armv7:
  extends: .release
  stage: build
  variables:
    TARGET: armv7-unknown-linux-musleabihf

container-image:armv7:
  stage: package
  needs: ["release:armv7"]
  image: fedora:33
  variables:
    BALENA_QEMU: https://github.com/balena-io/qemu/releases/download/v4.0.0%2Bbalena2/qemu-4.0.0.balena2-arm.tar.gz
    BALENA_QEMU_SHA256: ae0144b8b803ddb8620b7e6d5fd68e699a97e0e9c523d283ad54fcabc0e615f8
    RESTIC: https://github.com/restic/restic/releases/download/v0.11.0/restic_0.11.0_linux_arm.bz2
    RESTIC_SHA256: bcefbd70874b8198be4635b5c64b15359a7c28287d274e02d5177c4933ad3f71
    STORAGE_DRIVER: vfs
    BUILDAH_ISOLATION: chroot
  before_script:
    - dnf install -y buildah curl gzip bzip2 tar
  script:
    - curl -L -o qemu.tar.gz "$BALENA_QEMU"
    - echo $BALENA_QEMU_SHA256  qemu.tar.gz | sha256sum -c
    - tar xaf qemu.tar.gz
    - cp qemu-*/qemu-*-static qemu-user-static
    - chmod +x qemu-user-static

    - curl -L -o restic.bz2 "$RESTIC"
    - echo $RESTIC_SHA256  restic.bz2 | sha256sum -c
    - bunzip2 restic.bz2
    - image=$(sh package/container-image.sh arm32v7/alpine:3.12 qemu-user-static)
    - echo "$image"
    - buildah push --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD $image ${CONTAINER_IMAGE}-linux-arm32v7

    #- ctr=$(buildah from "$BASE_IMAGE")
    #- buildah run -v $PWD:/build $ctr -- /build/qemu-user-static --execve /bin/sh -c "apk add --no-cache ca-certificates openssh-client"
    #- buildah run -v $PWD:/build $ctr -- /build/qemu-user-static --execve /bin/sh -c "mkdir -p /cache /config/cirrus"
    #- chmod 0755 restic cirrus
    #- buildah copy $ctr restic cirrus /usr/bin/
    #- buildah config --env XDG_CONFIG_HOME=/config $ctr
    #- buildah config --env XDG_CACHE_HOME=/cache $ctr
    #- buildah config --entrypoint /usr/bin/cirrus $ctr
    #- buildah config --volume /cache $ctr
    #- buildah commit  $ctr docker://registry.gitlab.com/fkrull/cirrus/cirrus:latest-linux-arm32v7

container-image:x86_64:
  stage: package
  needs: ["release:x86_64"]
  image: fedora:33
  variables:
    RESTIC: https://github.com/restic/restic/releases/download/v0.11.0/restic_0.11.0_linux_amd64.bz2
    RESTIC_SHA256: f559e774c91f1201ffddba74d5758dec8342ad2b50a3bcd735ccb0c88839045c
    STORAGE_DRIVER: vfs
    BUILDAH_ISOLATION: chroot
  before_script:
    - dnf install -y buildah curl gzip bzip2 tar
  script:
    - curl -L -o restic.bz2 "$RESTIC"
    - echo $RESTIC_SHA256  restic.bz2 | sha256sum -c
    - bunzip2 restic.bz2
    - image=$(sh package/container-image.sh amd64/alpine:3.12)
    - echo "$image"
    - buildah push --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD $image ${CONTAINER_IMAGE}-linux-amd64

    #- ctr=$(buildah from "$BASE_IMAGE")
    #- buildah run -v $PWD:/build $ctr -- /build/qemu-user-static --execve /bin/sh -c "apk add --no-cache ca-certificates openssh-client"
    #- buildah run -v $PWD:/build $ctr -- /build/qemu-user-static --execve /bin/sh -c "mkdir -p /cache /config/cirrus"
    #- chmod 0755 restic cirrus
    #- buildah copy $ctr restic cirrus /usr/bin/
    #- buildah config --env XDG_CONFIG_HOME=/config $ctr
    #- buildah config --env XDG_CACHE_HOME=/cache $ctr
    #- buildah config --entrypoint /usr/bin/cirrus $ctr
    #- buildah config --volume /cache $ctr
    #- buildah commit  $ctr docker://registry.gitlab.com/fkrull/cirrus/cirrus:latest-linux-arm32v7

container-image:manifest-list:
  stage: container-manifest-list
  image: fedora:33
  before_script:
    - dnf install -y buildah
  script:
    - buildah manifest create cirrus \
      ${CONTAINER_IMAGE}-linux-arm32v7 \
      ${CONTAINER_IMAGE}-linux-amd64
    - buildah manifest push --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD cirrus ${CONTAINER_IMAGE}


# Rust with sccache
.sccache:
  image: rust:1
  variables:
    SCCACHE_URL: https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
    CARGO_TARGET_DIR: ${CI_PROJECT_DIR}/target
    CARGO_HOME: ${CI_PROJECT_DIR}/cargo
    SCCACHE_DIR: ${CI_PROJECT_DIR}/sccache
    RUSTC_WRAPPER: sccache
  cache:
    paths:
      - cargo/
      - sccache/
  before_script:
    - apt-get update
    - apt-get install -y libdbus-1-dev binutils-multiarch
    - curl -L "${SCCACHE_URL}" | tar -C /usr/bin/ -xz --wildcards --strip-components=1 '*/sccache'

# build release binary
.release:
  extends: .sccache
  variables:
    RUSTFLAGS: -Clinker=rust-lld
    STRIP: strip
    FEATURES: ""
  script:
    - rustup target add ${TARGET}
    - cargo build --release --target ${TARGET} --features "${FEATURES}"
    - cp target/${TARGET}/release/cirrus ./
    - ${STRIP} cirrus
    - ls -lh cirrus
  artifacts:
    paths:
      - cirrus
    expire_in: 1 day
