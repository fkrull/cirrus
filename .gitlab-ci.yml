# Rust with sccache
.rust-sccache:
  image: rust:1
  variables:
    SCCACHE_URL: https://github.com/mozilla/sccache/releases/download/0.2.13/sccache-0.2.13-x86_64-unknown-linux-musl.tar.gz
    CARGO_TARGET_DIR: ${CI_PROJECT_DIR}/target
    CARGO_HOME: ${CI_PROJECT_DIR}/cargo
    SCCACHE_DIR: ${CI_PROJECT_DIR}/sccache
    RUSTC_WRAPPER: sccache
  cache:
    paths:
      - cargo/
      - sccache/
  before_script:
    - apt-get update
    - apt-get install -y libdbus-1-dev binutils-multiarch
    - curl -L "${SCCACHE_URL}" | tar -C /usr/bin/ -xz --wildcards --strip-components=1 '*/sccache'

# build release binary
.release-binary:
  extends: .rust-sccache
  variables:
    RUSTFLAGS: -Clinker=rust-lld
    STRIP: strip
    FEATURES:
  script:
    - rustup target add ${TARGET}
    - cargo build --release --target ${TARGET} --features ${FEATURES}
    - cp target/${TARGET}/release/cirrus ./
    - ${STRIP} cirrus
  artifacts:
    paths:
      - cirrus
    expire_in: 1 day

stages:
  - test
  - build
  - package

test:
  extends: .rust-sccache
  stage: test
  script:
    - rustup component add clippy rustfmt
    - cargo fmt -- --check
    - cargo clippy --workspace
    - cargo test --workspace --all-features

build-x86_64:
  extends: .release-binary
  stage: build
  variables:
    TARGET: x86_64-unknown-linux-musl

build-armv7:
  extends: .release-binary
  stage: build
  variables:
    TARGET: armv7-unknown-linux-musleabihf
