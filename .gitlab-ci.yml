image: registry.gitlab.com/fkrull/cirrus/ci-tools:latest

variables:
  STORAGE_DRIVER: vfs
  BUILDAH_ISOLATION: chroot
  CARGO_HOME: ${CI_PROJECT_DIR}/cargo

include:
  - template: 'Workflows/Branch-Pipelines.gitlab-ci.yml'

stages:
  - tools
  - test
  - package
  - server
  - manifest
  - publish


# ----
tools:ci-tools-image:
  stage: tools
  image: quay.io/buildah/stable
  when: manual
  script:
    - buildah build-using-dockerfile
      -t ci-tools
      build-scripts/ci-tools
    - buildah push
      --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      ci-tools
      docker://registry.gitlab.com/fkrull/cirrus/ci-tools:latest

test:
  extends: .shared-cache
  stage: test
  script:
    - mkdir -p target
    - cargo fmt -- --check
    - cargo build -p build-scripts
    - cargo test --workspace --all-features
    - cargo run -p build-scripts --bin get-build-version > target/build-version
    - cat target/build-version
  artifacts:
    reports:
      dotenv: target/build-version
    expire_in: 1 day

# package steps
package:linux:x86_64:
  extends: .package
  stage: package
  variables:
    VERSION: $CIRRUS_VERSION
    TARGET: x86_64-unknown-linux-gnu
    PACKAGE_RUSTFLAGS: -Clinker=x86_64-linux-gnu-gcc -L/lib/x86_64-linux-gnu -L/usr/lib/x86_64-linux-gnu

package:linux:armv7:
  extends: .package
  stage: package
  variables:
    VERSION: $CIRRUS_VERSION
    TARGET: armv7-unknown-linux-gnueabihf
    PACKAGE_RUSTFLAGS: -Clinker=arm-linux-gnueabihf-gcc -L/lib/arm-linux-gnueabihf -L/usr/lib/arm-linux-gnueabihf

package:linux:aarch64:
  extends: .package
  stage: package
  variables:
    VERSION: $CIRRUS_VERSION
    TARGET: aarch64-unknown-linux-gnu
    PACKAGE_RUSTFLAGS: -Clinker=aarch64-linux-gnu-gcc -L/lib/aarch64-linux-gnu -L/usr/lib/aarch64-linux-gnu

package:windows:x86_64:
  extends: .package
  stage: package
  variables:
    VERSION: $CIRRUS_VERSION
    TARGET: x86_64-pc-windows-gnu

# server container images
server:linux:x86_64:
  extends: .server
  stage: server
  needs:
    - test
    - package:linux:x86_64
  variables:
    TAG: ${CIRRUS_IMAGE_TAG}-linux-amd64
    TARGET: x86_64-unknown-linux-gnu

server:linux:armv7:
  extends: .server
  stage: server
  needs:
    - test
    - package:linux:armv7
  variables:
    TAG: ${CIRRUS_IMAGE_TAG}-linux-arm32v7
    TARGET: armv7-unknown-linux-gnueabihf
    QEMU_BINARY: /usr/bin/qemu-arm-static

server:linux:aarch64:
  extends: .server
  stage: server
  needs:
    - test
    - package:linux:aarch64
  variables:
    TAG: ${CIRRUS_IMAGE_TAG}-linux-arm64v8
    TARGET: aarch64-unknown-linux-gnu
    QEMU_BINARY: /usr/bin/qemu-aarch64-static

# manifest
package:manifest:
  extends: .on-release-and-main
  stage: manifest
  needs:
    - test
    - package:linux:x86_64
    - package:linux:armv7
    - package:linux:aarch64
    - package:windows:x86_64
  script:
    - echo "$CIRRUS_VERSION" > public/version
  artifacts:
    paths:
      - public
    expire_in: 1 day

server:manifest:
  extends: .on-release-and-main
  stage: manifest
  needs:
    - test
    - server:linux:x86_64
    - server:linux:armv7
    - server:linux:aarch64
  script:
    - buildah manifest create cirrus-manifest-list
      docker://registry.gitlab.com/fkrull/cirrus/server:${CIRRUS_IMAGE_TAG}-linux-amd64
      docker://registry.gitlab.com/fkrull/cirrus/server:${CIRRUS_IMAGE_TAG}-linux-arm32v7
      docker://registry.gitlab.com/fkrull/cirrus/server:${CIRRUS_IMAGE_TAG}-linux-arm64v8
    - buildah manifest push
      --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      cirrus-manifest-list
      docker://registry.gitlab.com/fkrull/cirrus/server:${CIRRUS_IMAGE_TAG}

# publish
pages:
  extends: .on-release
  stage: publish
  needs:
    - package:manifest
  script:
    - ls -l public
    - cat public/version
    - mkdir public/latest
    - mv public/*.zip public/version public/latest/
  artifacts:
    paths:
      - public

server:publish:
  extends: .on-release
  stage: publish
  needs:
    - test
    - server:manifest
  script:
    - skopeo copy
      --all
      --dest-creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      docker://registry.gitlab.com/fkrull/cirrus/server:${CIRRUS_IMAGE_TAG}
      docker://registry.gitlab.com/fkrull/cirrus/server:latest


# ----
# which branches to run on
.on-release-and-main:
  rules:
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
    - if: '$CI_COMMIT_BRANCH == "release"'

.on-release:
  rules:
    - if: '$CI_COMMIT_BRANCH == "release"'

# caches
.shared-cache:
  cache:
    - key: rust-cargo
      paths:
        - cargo/
    - key: rust-target-shared
      paths:
        - target/

.job-cache:
  cache:
    - key: rust-cargo
      paths:
        - cargo/
    - key: rust-target-${CI_JOB_NAME}
      paths:
        - target/

# build binary package
.package:
  extends:
    - .on-release-and-main
    - .job-cache
  needs:
    - test
  script:
    - cargo run -p build-scripts --bin package --
      --version ${VERSION}
      --target ${TARGET}
      --features desktop
      --rustflags "${PACKAGE_RUSTFLAGS}"
  artifacts:
    paths:
      - public
    expire_in: 1 day

# build Linux container image
.server:
  extends:
    - .on-release-and-main
    - .shared-cache
  script:
    - cargo run -p build-scripts --bin package-server --
      --target ${TARGET}
      --qemu-binary "${QEMU_BINARY}"
      public/cirrus_${TARGET}.zip
    - buildah push
      --creds $CI_REGISTRY_USER:$CI_REGISTRY_PASSWORD
      cirrus-server-image
      docker://registry.gitlab.com/fkrull/cirrus/server:${TAG}
