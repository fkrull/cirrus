FROM docker.io/library/debian:11
# base tools
RUN apt-get update && \
    apt-get install -y \
        buildah \
        curl \
        gnupg2 \
        gzip \
        skopeo \
        tar \
        unzip

# qemu-user-static
COPY install-qemu.sh /

ENV QEMU_ARM_URL=https://github.com/balena-io/qemu/releases/download/v6.0.0%2Bbalena1/qemu-6.0.0.balena1-arm.tar.gz
ENV QEMU_ARM_SHA256=359c30fb422a18766642cdc634d575ca2d0b6d6d58bda0ec2e33b425c508194c
RUN bash /install-qemu.sh $QEMU_ARM_URL $QEMU_ARM_SHA256 /usr/bin/qemu-arm-static

ENV QEMU_AARCH64_URL=https://github.com/balena-io/qemu/releases/download/v6.0.0%2Bbalena1/qemu-6.0.0.balena1-aarch64.tar.gz
ENV QEMU_AARCH64_SHA256=5db25cccb40ac7b1ca857653b883376b931d91b06ff34ffe70dcf6180bd07bb8
RUN bash /install-qemu.sh $QEMU_AARCH64_URL $QEMU_AARCH64_SHA256 /usr/bin/qemu-aarch64-static

# Rust
ENV RUST_VERSION=1.55.0
RUN curl https://sh.rustup.rs -sSf | \
    CARGO_HOME=/usr/local/cargo sh -s -- \
        -y \
        --profile default \
        --no-modify-path \
        --default-toolchain $RUST_VERSION
ENV PATH=/usr/local/cargo/bin:$PATH

# crosscompile Linux
COPY cross-buildroot.sh /
RUN apt-get update && \
    apt-get install -y \
        gcc \
        gcc-aarch64-linux-gnu \
        gcc-arm-linux-gnueabihf \
        && \
    bash /cross-buildroot.sh arm64 aarch64-linux-gnu aarch64-unknown-linux-gnu && \
    bash /cross-buildroot.sh armhf arm-linux-gnueabihf armv7-unknown-linux-gnueabihf && \
    bash /cross-buildroot.sh amd64 x86_64-linux-gnu x86_64-unknown-linux-gnu

# crosscompile Windows
RUN apt-get update && \
    apt-get install -y gcc-mingw-w64-x86-64 && \
    rustup target add x86_64-pc-windows-gnu
