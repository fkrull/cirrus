FROM docker.io/library/debian:10
# baseline tools
RUN apt-get update && \
    apt-get install -y \
        build-essential \
        curl \
        gnupg2 \
        gzip \
        tar \
        unzip

# container tools
RUN echo 'deb http://deb.debian.org/debian buster-backports main' >> /etc/apt/sources.list && \
    echo 'deb https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/ /' > /etc/apt/sources.list.d/devel:kubic:libcontainers:stable.list && \
    curl -L https://download.opensuse.org/repositories/devel:/kubic:/libcontainers:/stable/Debian_10/Release.key | apt-key add - && \
    apt-get update && \
    apt-get install -y \
        buildah \
        skopeo

# crosscompile environments
COPY cross-buildroot.sh /
RUN apt-get update && \
    apt-get install -y gcc-mingw-w64-x86-64 && \
    bash /cross-buildroot.sh arm64 aarch64-unknown-linux-gnu && \
    bash /cross-buildroot.sh armhf armv7-unknown-linux-gnueabihf && \
    bash /cross-buildroot.sh amd64 x86_64-unknown-linux-gnu

# qemu-user-static
COPY install-qemu.sh /

ENV QEMU_ARM_URL=https://github.com/balena-io/qemu/releases/download/v4.0.0%2Bbalena2/qemu-4.0.0.balena2-arm.tar.gz
ENV QEMU_ARM_SHA256=ae0144b8b803ddb8620b7e6d5fd68e699a97e0e9c523d283ad54fcabc0e615f8
RUN bash /install-qemu.sh $QEMU_ARM_URL $QEMU_ARM_SHA256 /usr/bin/qemu-arm-static

ENV QEMU_AARCH64_URL=https://github.com/balena-io/qemu/releases/download/v4.0.0%2Bbalena2/qemu-4.0.0.balena2-aarch64.tar.gz
ENV QEMU_AARCH64_SHA256=e98eed19f680ae0b7e5937204040653c3312ae414f89eaccddeeb706934a63e4
RUN bash /install-qemu.sh $QEMU_AARCH64_URL $QEMU_AARCH64_SHA256 /usr/bin/qemu-aarch64-static

# sccache
ENV SCCACHE_URL=https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
ENV SCCACHE_SHA256=e5d03a9aa3b9fac7e490391bbe22d4f42c840d31ef9eaf127a03101930cbb7ca

RUN mkdir sccache && \
    cd sccache && \
    curl -L -o sccache.tgz $SCCACHE_URL && \
    echo "$SCCACHE_SHA256 *sccache.tgz" | sha256sum -c && \
    tar -C /usr/bin/ -xz -f sccache.tgz --wildcards --strip-components=1 '*/sccache' && \
    chmod 0755 /usr/bin/sccache && \
    cd .. && \
    rm -rf sccache

# Rust
ENV RUST_VERSION=1.50.0
RUN curl https://sh.rustup.rs -sSf | \
    CARGO_HOME=/usr/local/cargo sh -s -- -y --profile default --no-modify-path --default-toolchain $RUST_VERSION
ENV PATH=/usr/local/cargo/bin:$PATH
