FROM debian:10 AS buildroots
RUN dpkg --add-architecture armhf && \
    dpkg --add-architecture arm64 && \
    dpkg --add-architecture amd64 && \
    apt-get update && \
    apt-get install -y \
        libc6-dev:armhf \
        libgcc-8-dev:armhf \
        libdbus-1-dev:armhf \
        libc6-dev:arm64 \
        libgcc-8-dev:arm64 \
        libdbus-1-dev:arm64 \
        libc6-dev:amd64 \
        libgcc-8-dev:amd64 \
        libdbus-1-dev:amd64 \
        && \
    rm -rf /var/lib/apt/lists

FROM fedora:33
COPY --from=buildroots /lib/arm-linux-gnueabihf /usr/lib/
COPY --from=buildroots /usr/lib/arm-linux-gnueabihf /usr/lib/
COPY --from=buildroots /lib/aarch64-linux-gnu /usr/lib/
COPY --from=buildroots /usr/lib/aarch64-linux-gnu /usr/lib/
COPY --from=buildroots /lib/x86_64-linux-gnu /usr/lib/
COPY --from=buildroots /usr/lib/x86_64-linux-gnu /usr/lib/

RUN dnf install -y \
      # baseline tools
      curl \
      gcc \
      glibc-devel \
      gzip \
      tar \
      unzip \

      # container tools
      buildah \
      skopeo \

      # crossbuild tools
      mingw64-gcc \
      mingw64-winpthreads-static \

      # cirrus build dependencies
      #dbus-devel \
      && \
    dnf clean all

# qemu-user-static
COPY install-qemu.sh /install-qemu.sh

ENV QEMU_ARM_URL=https://github.com/balena-io/qemu/releases/download/v4.0.0%2Bbalena2/qemu-4.0.0.balena2-arm.tar.gz
ENV QEMU_ARM_SHA256=ae0144b8b803ddb8620b7e6d5fd68e699a97e0e9c523d283ad54fcabc0e615f8
RUN bash /install-qemu.sh $QEMU_ARM_URL $QEMU_ARM_SHA256 /usr/bin/qemu-arm-static

ENV QEMU_AARCH64_URL=https://github.com/balena-io/qemu/releases/download/v4.0.0%2Bbalena2/qemu-4.0.0.balena2-aarch64.tar.gz
ENV QEMU_AARCH64_SHA256=e98eed19f680ae0b7e5937204040653c3312ae414f89eaccddeeb706934a63e4
RUN bash /install-qemu.sh $QEMU_AARCH64_URL $QEMU_AARCH64_SHA256 /usr/bin/qemu-aarch64-static

RUN rm /install-qemu.sh

# sccache
ENV SCCACHE_URL=https://github.com/mozilla/sccache/releases/download/v0.2.15/sccache-v0.2.15-x86_64-unknown-linux-musl.tar.gz
ENV SCCACHE_SHA256=e5d03a9aa3b9fac7e490391bbe22d4f42c840d31ef9eaf127a03101930cbb7ca

RUN mkdir sccache && \
    cd sccache && \
    curl -L -o sccache.tgz $SCCACHE_URL && \
    echo "$SCCACHE_SHA256 *sccache.tgz" | sha256sum -c && \
    tar -C /usr/bin/ -xz -f sccache.tgz --wildcards --strip-components=1 '*/sccache' && \
    chmod 0755 /usr/bin/sccache && \
    cd .. && \
    rm -rf sccache

# Rust
ENV RUST_VERSION=1.50.0
RUN curl https://sh.rustup.rs -sSf | \
    CARGO_HOME=/usr/local/cargo sh -s -- -y --profile default --no-modify-path --default-toolchain $RUST_VERSION
ENV PATH=/usr/local/cargo/bin:$PATH
